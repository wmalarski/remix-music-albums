fragment Review on review {
  id
  rate
  text
  createdAt
}

fragment ReviewWithAlbumAndArtist on review {
  ...Review
  albumByAlbum {
    ...AlbumWithArtist
  }
}

mutation InsertReview($review: review_insert_input!) {
  insertReviewOne: insert_review_one(object: $review) {
    id
  }
}

query SelectReviews($limit: Int, $offset: Int, $where: review_bool_exp) {
  review(
    limit: $limit
    offset: $offset
    where: $where
    order_by: { createdAt: desc }
  ) {
    ...Review
  }
  reviewAggregate: review_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query SelectReviewsWithInfo($limit: Int, $offset: Int) {
  review(limit: $limit, offset: $offset, order_by: { createdAt: desc }) {
    ...ReviewWithAlbumAndArtist
  }
  reviewAggregate: review_aggregate {
    aggregate {
      count
    }
  }
}

query SelectReview($id: Int!) {
  reviewByPk: review_by_pk(id: $id) {
    ...ReviewWithAlbumAndArtist
  }
}

mutation DeleteReview($id: Int, $profile: Int) {
  deleteReview: delete_review(
    where: { _and: [{ profile: { _eq: $profile } }, { id: { _eq: $id } }] }
  ) {
    returning {
      album
      profile
    }
  }
}

mutation UpdateReview($id: Int, $profile: Int, $input: review_set_input) {
  updateReview: update_review(
    where: { _and: [{ profile: { _eq: $profile } }, { id: { _eq: $id } }] }
    _set: $input
  ) {
    returning {
      id
      profile
    }
  }
}
