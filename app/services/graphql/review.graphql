fragment Review on review {
  id
  rate
  text
  createdAt
}

fragment ReviewWithAlbumAndArtist on review {
  ...Review
  albumByAlbum {
    ...AlbumWithArtist
  }
}

mutation InsertReview($review: review_insert_input!) {
  insertReviewOne: insert_review_one(object: $review) {
    id
  }
}

query SelectReviews($limit: Int, $offset: Int, $where: review_bool_exp) {
  review(limit: $limit, offset: $offset, where: $where) {
    ...Review
  }
  reviewAggregate: review_aggregate {
    aggregate {
      count
    }
  }
}

query SelectReviewsWithInfo($limit: Int, $offset: Int) {
  review(limit: $limit, offset: $offset) {
    ...ReviewWithAlbumAndArtist
  }
  reviewAggregate: review_aggregate {
    aggregate {
      count
    }
  }
}

query SelectReview($id: Int!) {
  reviewByPk: review_by_pk(id: $id) {
    ...ReviewWithAlbumAndArtist
  }
}

mutation DeleteReview($id: Int!) {
  deleteReviewByPk: delete_review_by_pk(id: $id) {
    album
  }
}

mutation UpdateReview($id: Int!, $input: review_set_input) {
  updateReviewByPk: update_review_by_pk(pk_columns: { id: $id }, _set: $input) {
    id
  }
}
