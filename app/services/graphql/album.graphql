fragment Album on album {
  id
  sid
  title
  year
}

fragment AlbumWithArtist on album {
  ...Album
  artistByArtist {
    ...Artist
  }
}

fragment RandomAlbumWithArtist on random_albums {
  id
  sid
  title
  year
  artistByArtist {
    ...Artist
  }
}

query RandomAlbums($limit: Int) {
  randomAlbums: random_albums(limit: $limit) {
    ...RandomAlbumWithArtist
  }
}

query SelectAlbums($limit: Int, $offset: Int, $where: album_bool_exp) {
  album(limit: $limit, offset: $offset, where: $where) {
    ...Album
  }
  albumAggregate: album_aggregate {
    aggregate {
      count
    }
  }
}

mutation InsertAlbum($album: album_insert_input!) {
  insertAlbumOne: insert_album_one(object: $album) {
    id
  }
}

query SelectAlbum($id: Int!) {
  albumByPk: album_by_pk(id: $id) {
    ...AlbumWithArtist
  }
}

mutation DeleteAlbum($id: Int!) {
  deleteAlbumByPk: delete_album_by_pk(id: $id) {
    artist
  }
}

mutation UpdateAlbum($id: Int!, $input: album_set_input) {
  updateAlbumByPk: update_album_by_pk(pk_columns: { id: $id }, _set: $input) {
    id
  }
}
